"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import thorchain.v1.common.common_pb2
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _NodeStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _NodeStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NodeStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    Unknown: _NodeStatus.ValueType  # 0
    Whitelisted: _NodeStatus.ValueType  # 1
    Standby: _NodeStatus.ValueType  # 2
    Ready: _NodeStatus.ValueType  # 3
    Active: _NodeStatus.ValueType  # 4
    Disabled: _NodeStatus.ValueType  # 5

class NodeStatus(_NodeStatus, metaclass=_NodeStatusEnumTypeWrapper): ...

Unknown: NodeStatus.ValueType  # 0
Whitelisted: NodeStatus.ValueType  # 1
Standby: NodeStatus.ValueType  # 2
Ready: NodeStatus.ValueType  # 3
Active: NodeStatus.ValueType  # 4
Disabled: NodeStatus.ValueType  # 5
global___NodeStatus = NodeStatus

class _NodeType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _NodeTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NodeType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    TypeValidator: _NodeType.ValueType  # 0
    TypeVault: _NodeType.ValueType  # 1
    TypeUnknown: _NodeType.ValueType  # 2

class NodeType(_NodeType, metaclass=_NodeTypeEnumTypeWrapper): ...

TypeValidator: NodeType.ValueType  # 0
TypeVault: NodeType.ValueType  # 1
TypeUnknown: NodeType.ValueType  # 2
global___NodeType = NodeType

@typing_extensions.final
class NodeAccount(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODE_ADDRESS_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    PUB_KEY_SET_FIELD_NUMBER: builtins.int
    VALIDATOR_CONS_PUB_KEY_FIELD_NUMBER: builtins.int
    BOND_FIELD_NUMBER: builtins.int
    ACTIVE_BLOCK_HEIGHT_FIELD_NUMBER: builtins.int
    BOND_ADDRESS_FIELD_NUMBER: builtins.int
    STATUS_SINCE_FIELD_NUMBER: builtins.int
    SIGNER_MEMBERSHIP_FIELD_NUMBER: builtins.int
    REQUESTED_TO_LEAVE_FIELD_NUMBER: builtins.int
    FORCED_TO_LEAVE_FIELD_NUMBER: builtins.int
    LEAVE_SCORE_FIELD_NUMBER: builtins.int
    IP_ADDRESS_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    node_address: builtins.bytes
    status: global___NodeStatus.ValueType
    @property
    def pub_key_set(self) -> thorchain.v1.common.common_pb2.PubKeySet: ...
    validator_cons_pub_key: builtins.str
    bond: builtins.str
    active_block_height: builtins.int
    bond_address: builtins.str
    status_since: builtins.int
    @property
    def signer_membership(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    requested_to_leave: builtins.bool
    forced_to_leave: builtins.bool
    leave_score: builtins.int
    ip_address: builtins.str
    version: builtins.str
    type: global___NodeType.ValueType
    def __init__(
        self,
        *,
        node_address: builtins.bytes = ...,
        status: global___NodeStatus.ValueType = ...,
        pub_key_set: thorchain.v1.common.common_pb2.PubKeySet | None = ...,
        validator_cons_pub_key: builtins.str = ...,
        bond: builtins.str = ...,
        active_block_height: builtins.int = ...,
        bond_address: builtins.str = ...,
        status_since: builtins.int = ...,
        signer_membership: collections.abc.Iterable[builtins.str] | None = ...,
        requested_to_leave: builtins.bool = ...,
        forced_to_leave: builtins.bool = ...,
        leave_score: builtins.int = ...,
        ip_address: builtins.str = ...,
        version: builtins.str = ...,
        type: global___NodeType.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pub_key_set", b"pub_key_set"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["active_block_height", b"active_block_height", "bond", b"bond", "bond_address", b"bond_address", "forced_to_leave", b"forced_to_leave", "ip_address", b"ip_address", "leave_score", b"leave_score", "node_address", b"node_address", "pub_key_set", b"pub_key_set", "requested_to_leave", b"requested_to_leave", "signer_membership", b"signer_membership", "status", b"status", "status_since", b"status_since", "type", b"type", "validator_cons_pub_key", b"validator_cons_pub_key", "version", b"version"]) -> None: ...

global___NodeAccount = NodeAccount

@typing_extensions.final
class BondProvider(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BOND_ADDRESS_FIELD_NUMBER: builtins.int
    BOND_FIELD_NUMBER: builtins.int
    bond_address: builtins.bytes
    bond: builtins.str
    def __init__(
        self,
        *,
        bond_address: builtins.bytes = ...,
        bond: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bond", b"bond", "bond_address", b"bond_address"]) -> None: ...

global___BondProvider = BondProvider

@typing_extensions.final
class BondProviders(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODE_ADDRESS_FIELD_NUMBER: builtins.int
    NODE_OPERATOR_FEE_FIELD_NUMBER: builtins.int
    PROVIDERS_FIELD_NUMBER: builtins.int
    node_address: builtins.bytes
    node_operator_fee: builtins.str
    @property
    def providers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BondProvider]: ...
    def __init__(
        self,
        *,
        node_address: builtins.bytes = ...,
        node_operator_fee: builtins.str = ...,
        providers: collections.abc.Iterable[global___BondProvider] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["node_address", b"node_address", "node_operator_fee", b"node_operator_fee", "providers", b"providers"]) -> None: ...

global___BondProviders = BondProviders
